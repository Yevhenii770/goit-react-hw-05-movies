{"version":3,"file":"static/js/39.089c49a0.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","components/Api/Api.jsx","pages/FilmDetails.jsx"],"sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","const BASE__URL = 'https://api.themoviedb.org/3/';\nconst API__KEY = '0fa5981d55037b4698e315d74908e1b9';\n\nexport async function fetchHome() {\n  return fetch(`${BASE__URL}trending/all/day?api_key=${API__KEY}`).then(\n    response => response.json()\n  );\n}\n\nexport async function fetchById(id) {\n  return fetch(`${BASE__URL}movie/${id}?api_key=${API__KEY}`).then(response =>\n    response.json()\n  );\n}\n\nexport async function fetchByName(filmName) {\n  return fetch(\n    `${BASE__URL}search/movie?api_key=${API__KEY}&query=${filmName}`\n  ).then(response => response.json());\n}\n\nexport async function fetchCast(id) {\n  return fetch(\n    `${BASE__URL}movie/${id}/credits?api_key=${API__KEY}&language=en-US`\n  ).then(response => response.json());\n}\n\nexport async function fetchReviews(id) {\n  return fetch(\n    `${BASE__URL}movie/${id}/reviews?api_key=${API__KEY}&language=en-US`\n  ).then(response => response.json());\n}\n","import { useEffect, useState, useRef } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { fetchById } from '../components/Api/Api';\nimport { Link } from 'react-router-dom';\nimport noMovieImg from '../img/no-poster-available.jpg';\nimport Spinner from '../components/Loader/Loader';\n\nconst FilmDetails = () => {\n  const { id } = useParams();\n  const [data, setData] = useState({});\n  const [status, setStatus] = useState('idle');\n  const [error, setError] = useState(null);\n  const location = useLocation();\n  const baclLink = useRef(location.state?.from ?? '/home');\n  useEffect(() => {\n    setStatus('pending');\n    fetchById(id)\n      .then(\n        ({\n          poster_path,\n          release_date,\n          original_title,\n          overview,\n          vote_average,\n          genres,\n        }) => {\n          setData({\n            poster_path,\n            release_date,\n            original_title,\n            overview,\n            vote_average,\n            genres,\n          });\n          setStatus('resolved');\n        }\n      )\n      .catch(error => setError(error));\n    if (error) {\n      setStatus('rejected');\n    }\n  }, [id, error]);\n\n  const getGenres = arrGenres => {\n    if (arrGenres) {\n      return arrGenres.map(genre => genre.name).join(', ');\n    }\n  };\n\n  const getYear = releaseDate => {\n    const date = new Date(releaseDate);\n    if (date === 'Invalid Date') {\n      return 'Sorry, we dont have any date for you :(';\n    }\n    if (date) {\n      return date.getFullYear();\n    }\n  };\n  if (status === 'idle') {\n    return <></>;\n  }\n  if (status === 'pending') {\n    return (\n      <>\n        <Spinner />\n      </>\n    );\n  }\n  if (status === 'resolved') {\n    return (\n      <>\n        <div>\n          <Link to={baclLink.current}>Go Back</Link>\n        </div>\n        <div>\n          {data.original_title ? (\n            <img\n              alt={data.original_title}\n              src={`https://image.tmdb.org/t/p/w500${data.poster_path}`}\n            />\n          ) : (\n            <img src={noMovieImg} alt=\"not available\" />\n          )}\n\n          <div>\n            <h1>\n              {data.original_title} {getYear(data.release_date)}\n            </h1>\n            <p>User Score: {~~(data.vote_average * 10)}%</p>\n            <p>Overview</p>\n            <p>{data.overview}</p>\n            <p>Genres</p>\n            <p>{getGenres(data.genres)}</p>\n          </div>\n        </div>\n        <div>\n          <ul>\n            <li>\n              <Link to=\"cast\">\n                <button>Cast</button>\n              </Link>\n            </li>\n            <li>\n              <Link to=\"reviews\">\n                <button>Reviews</button>\n              </Link>\n            </li>\n          </ul>\n          <Outlet />\n        </div>\n      </>\n    );\n  }\n  if (status === 'idle') {\n    return <></>;\n  }\n};\n\nexport default FilmDetails;\n"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","BASE__URL","API__KEY","fetchHome","fetch","response","json","fetchById","id","fetchByName","filmName","fetchCast","fetchReviews","useParams","useState","data","setData","status","setStatus","setError","location","useLocation","baclLink","useRef","state","from","useEffect","poster_path","release_date","original_title","overview","vote_average","genres","catch","to","current","alt","src","noMovieImg","releaseDate","date","Date","getFullYear","getYear","arrGenres","map","genre","name","join","getGenres"],"sourceRoot":""}
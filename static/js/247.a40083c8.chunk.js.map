{"version":3,"file":"static/js/247.a40083c8.chunk.js","mappings":"sIAAA,SAASA,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CACIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAEvC,CACe,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACTC,EAAOC,UACT,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GACzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CACA,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,EACnE,CACAjB,OAAMkB,EACR,GACF,CACF,C,sJC7BMC,EAAY,gCACZC,EAAW,mCAEV,SAAeC,IAAtB,4CAAO,OAAP,cAAO,uGACEC,MAAM,GAAD,OAAIH,EAAJ,oCAAyCC,IAAYX,MAC/D,SAAAc,GAAQ,OAAIA,EAASC,MAAb,KAFL,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,cAAO,WAAyBC,GAAzB,0FACEJ,MAAM,GAAD,OAAIH,EAAJ,iBAAsBO,EAAtB,oBAAoCN,IAAYX,MAAK,SAAAc,GAAQ,OACvEA,EAASC,MAD8D,KADpE,kEAMA,SAAeG,EAAtB,+CAAO,OAAP,cAAO,WAA2BC,GAA3B,0FACEN,MAAM,GAAD,OACPH,EADO,gCAC0BC,EAD1B,kBAC4CQ,IACtDnB,MAAK,SAAAc,GAAQ,OAAIA,EAASC,MAAb,KAHV,kEAMA,SAAeK,EAAtB,+CAAO,OAAP,cAAO,WAAyBH,GAAzB,0FACEJ,MAAM,GAAD,OACPH,EADO,iBACWO,EADX,4BACiCN,EADjC,oBAEVX,MAAK,SAAAc,GAAQ,OAAIA,EAASC,MAAb,KAHV,kEAMA,SAAeM,EAAtB,+CAAO,OAAP,cAAO,WAA4BJ,GAA5B,0FACEJ,MAAM,GAAD,OACPH,EADO,iBACWO,EADX,4BACiCN,EADjC,oBAEVX,MAAK,SAAAc,GAAQ,OAAIA,EAASC,MAAb,KAHV,kE,uFC0BP,UAhDa,WACX,IAAQE,GAAOK,EAAAA,EAAAA,MAAPL,GACR,GAA8BM,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAwBF,EAAAA,EAAAA,UAAS,MAAjC,eAAOG,EAAP,KAAaC,EAAb,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACRH,GAAW,IACXL,EAAAA,EAAAA,GAAUH,GACPjB,MAAK,YAAe,IACb6B,EADY,EAAXC,KACcC,KAAI,SAAAC,GACvB,OAAOA,CACR,IACDL,EAAQE,EACT,IACAI,OAAM,SAAApC,GAAK,OAAIqC,QAAQC,IAAItC,EAAhB,IACd4B,GAAW,EACZ,GAAE,CAACR,KAGF,8BACGO,EACC,aACEE,GAAQA,EAAKU,OAAS,GACxB,0BACE,wBACGV,EAAKK,KAAI,gBAAGM,EAAH,EAAGA,KAAMC,EAAT,EAASA,UAAWC,EAApB,EAAoBA,aAActB,EAAlC,EAAkCA,GAAlC,OACR,0BACGsB,GACC,gBACEC,IAAKH,EACLI,IAAG,wCAAmCF,MAGxC,gBAAKC,IAAKH,EAAMI,IAAKC,KAGvB,uBAAIL,KACJ,uBAAIC,MAXGrB,EADD,SAkBd,0CAIP,C","sources":["../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","components/Api/Api.jsx","components/Cast/Cast.jsx"],"sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","const BASE__URL = 'https://api.themoviedb.org/3/';\nconst API__KEY = '0fa5981d55037b4698e315d74908e1b9';\n\nexport async function fetchHome() {\n  return fetch(`${BASE__URL}trending/all/day?api_key=${API__KEY}`).then(\n    response => response.json()\n  );\n}\n\nexport async function fetchById(id) {\n  return fetch(`${BASE__URL}movie/${id}?api_key=${API__KEY}`).then(response =>\n    response.json()\n  );\n}\n\nexport async function fetchByName(filmName) {\n  return fetch(\n    `${BASE__URL}search/movie?api_key=${API__KEY}&query=${filmName}`\n  ).then(response => response.json());\n}\n\nexport async function fetchCast(id) {\n  return fetch(\n    `${BASE__URL}movie/${id}/credits?api_key=${API__KEY}&language=en-US`\n  ).then(response => response.json());\n}\n\nexport async function fetchReviews(id) {\n  return fetch(\n    `${BASE__URL}movie/${id}/reviews?api_key=${API__KEY}&language=en-US`\n  ).then(response => response.json());\n}\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCast } from '../Api/Api';\nimport userImg from '../../img/no-poster-available.jpg';\n\nconst Cast = () => {\n  const { id } = useParams();\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    setLoading(true);\n    fetchCast(id)\n      .then(({ cast }) => {\n        const newCast = cast.map(el => {\n          return el;\n        });\n        setData(newCast);\n      })\n      .catch(error => console.log(error));\n    setLoading(false);\n  }, [id]);\n\n  return (\n    <>\n      {loading ? (\n        'Loading...'\n      ) : data && data.length > 0 ? (\n        <div>\n          <ul>\n            {data.map(({ name, character, profile_path, id }) => (\n              <li key={id}>\n                {profile_path ? (\n                  <img\n                    alt={name}\n                    src={`https://image.tmdb.org/t/p/w92${profile_path}`}\n                  />\n                ) : (\n                  <img alt={name} src={userImg} />\n                )}\n\n                <p>{name}</p>\n                <p>{character}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      ) : (\n        <p>No data found</p>\n      )}\n    </>\n  );\n};\nexport default Cast;\n"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","BASE__URL","API__KEY","fetchHome","fetch","response","json","fetchById","id","fetchByName","filmName","fetchCast","fetchReviews","useParams","useState","loading","setLoading","data","setData","useEffect","newCast","cast","map","el","catch","console","log","length","name","character","profile_path","alt","src","userImg"],"sourceRoot":""}